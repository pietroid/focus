// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;

import 'src/thing.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 7205426862086746981),
      name: 'Thing',
      lastPropertyId: const obx_int.IdUid(7, 7648253567774301078),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 739849683662026029),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 710471814869474566),
            name: 'rank',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2600049209867125948),
            name: 'content',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2673904232538421894),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7064081710096286703),
            name: 'done',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3495100603482662985),
            name: 'tags',
            type: 30,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 7648253567774301078),
            name: 'value',
            type: 8,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 6800590978133842773),
            name: 'children',
            targetId: const obx_int.IdUid(1, 7205426862086746981))
      ],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'parents', srcEntity: 'Thing', srcField: 'children')
      ])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
obx.Store openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) {
  return obx.Store(getObjectBoxModel(),
      directory: directory,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(1, 7205426862086746981),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(1, 6800590978133842773),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Thing: obx_int.EntityDefinition<Thing>(
        model: _entities[0],
        toOneRelations: (Thing object) => [],
        toManyRelations: (Thing object) => {
              obx_int.RelInfo<Thing>.toMany(1, object.id): object.children,
              obx_int.RelInfo<Thing>.toManyBacklink(1, object.id):
                  object.parents
            },
        getId: (Thing object) => object.id,
        setId: (Thing object, int id) {
          object.id = id;
        },
        objectToFB: (Thing object, fb.Builder fbb) {
          final contentOffset = fbb.writeString(object.content);
          final tagsOffset = fbb.writeList(
              object.tags.map(fbb.writeString).toList(growable: false));
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.rank);
          fbb.addOffset(2, contentOffset);
          fbb.addInt64(3, object.createdAt.millisecondsSinceEpoch);
          fbb.addBool(4, object.done);
          fbb.addOffset(5, tagsOffset);
          fbb.addFloat64(6, object.value);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final contentParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final createdAtParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0));
          final doneParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final valueParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 16);
          final tagsParam = const fb.ListReader<String>(
                  fb.StringReader(asciiOptimization: true),
                  lazy: false)
              .vTableGet(buffer, rootOffset, 14, []);
          final object = Thing(
              content: contentParam,
              createdAt: createdAtParam,
              done: doneParam,
              value: valueParam,
              tags: tagsParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..rank = const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          obx_int.InternalToManyAccess.setRelInfo<Thing>(object.children, store,
              obx_int.RelInfo<Thing>.toMany(1, object.id));
          obx_int.InternalToManyAccess.setRelInfo<Thing>(object.parents, store,
              obx_int.RelInfo<Thing>.toManyBacklink(1, object.id));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Thing] entity fields to define ObjectBox queries.
class Thing_ {
  /// See [Thing.id].
  static final id = obx.QueryIntegerProperty<Thing>(_entities[0].properties[0]);

  /// See [Thing.rank].
  static final rank =
      obx.QueryIntegerProperty<Thing>(_entities[0].properties[1]);

  /// See [Thing.content].
  static final content =
      obx.QueryStringProperty<Thing>(_entities[0].properties[2]);

  /// See [Thing.createdAt].
  static final createdAt =
      obx.QueryDateProperty<Thing>(_entities[0].properties[3]);

  /// See [Thing.done].
  static final done =
      obx.QueryBooleanProperty<Thing>(_entities[0].properties[4]);

  /// See [Thing.tags].
  static final tags =
      obx.QueryStringVectorProperty<Thing>(_entities[0].properties[5]);

  /// See [Thing.value].
  static final value =
      obx.QueryDoubleProperty<Thing>(_entities[0].properties[6]);

  /// see [Thing.children]
  static final children =
      obx.QueryRelationToMany<Thing, Thing>(_entities[0].relations[0]);
}
